version: '3.7'
services:
  postgres:
    container_name: database-service
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    logging:
      options:
        max-size: 10m
        max-file: "3"
    networks: 
      - backend
    ports:
      - '5432:5432'
    volumes:
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init-db-01.sql
      - ./person-postgresql-volume:/var/lib/postgresql/data

  zookeeper:
    container_name: zookeeper-service
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks: 
      - backend
    ports:
      - '22181:2181'

  kafka:
    container_name: kafka-service
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    networks: 
      - backend
    ports:
      - '29092:29092'
      - '9092:9092'
      - '9101:9101'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  
  person-api-service:
    container_name: person-api
    build:
        context: person-api
        dockerfile: Dockerfile
    image: person-api:latest
    networks: 
      - backend
    ports:
        - 9080:9080
    links:
      - "person-ms-service:personms"

  person-ms-service:
    container_name: person-ms
    build:
        context: person-ms
        dockerfile: Dockerfile
    image: person-ms:latest
    networks: 
      - backend
    ports:
      - 9090:9090
    links:
      - "postgres:postgresdb"
      - "kafka:kafka"
    depends_on:
      - postgres
      - kafka

volumes:
  person-postgresql-volume:
    external: true

networks: 
  backend:
    name: kotlin-person-network
    driver: bridge
